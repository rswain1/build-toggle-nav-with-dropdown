body {
    background-color: #818cf8;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23f1f5f9' fill-opacity='0.26'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E");
    font-family: effra, sans-serif;
    font-weight: 300;
    font-style: normal;
}

.flex-container {
  display: flex;
  flex-flow: wrap;
  justify-content: space-between;
  align-items: center;
}

.inner-container {
  padding: 0 1rem;
}

h1 {
  font-size: 1.125rem;
  line-height: 3.75rem;
}

h2 {
  font-family: effra, sans-serif;
  font-weight: 700;
  font-style: normal;
}

header {
  background-color: #f8fafc;
}

button {
  background-color: #f8fafc;
  border: none;
}

svg {
    width: 1.25rem;
}

header a {
  text-decoration: none;
  color: #475569;
  font-size: 0.875rem;
  font-weight: bold;
}

h1 a {
  color: #dc2626;
}

nav {
  position: absolute;
  background-color: #f8fafc;
  width: 98vw;
  top: 3.75rem;
  left: 0;
  /* Once this changes to position absolute, it's no longer in the layout of the HTML, therefore it's no longer a flex item. vvv */
  /* flex: 1 0 100%; */
  visibility: hidden;
  opacity: 0;
  overflow: hidden;
}

/* Special Class that will show the nav when the button is clicked. (Do not add to the HTML) */
.show-nav {
  visibility: visible;
  opacity: 1;
  overflow: visible;
}

.menu li {
  line-height: 3.125rem;
}

.menu a {
  display:flex;
  justify-content: space-between;
  padding: 0 0.5rem;
}

.menu a:hover {
  background-color: #e2e8f0;
}

.menu svg {
  width: 10px;
}

.submenu {
    visibility: hidden;
    opacity: 0;
    overflow: hidden;
    max-height: 0;
}

.submenu li {
  border-bottom: 1px solid #cbd5e1;
}

/* what do you hover over? --> first selector + :hover
what do you want to change? --> second selector */

.menu li:hover > .submenu {
    visibility: visible;
    opacity: 1;
    overflow: visible;
    max-height: 14.0625rem;
}

/* this works to an extent, but the hover state has it's limitations. a better way to develop a dropdown nav is javascript */

main h2{
  padding: 1rem 0;
  text-align: center;
  font-size: 2rem;
  color: #f8fafc;
}

@media screen and (min-width: 1100px) {
    .inner-container {
      padding: 0;
      width: 1000px;
      margin: 0 auto;
    }

    .btn {
      display: none;
    }

    nav {
      position: static;
      visibility: visible;
      opacity: 1;
      overflow: visible;
      width: unset;
    }

    a:nth-child(3) {
      order: 1;
    }

    .menu{
      display: flex;
      justify-content: space-between;
    }

    ul.menu li{
        flex-grow: 1;
        flex-shrink: 0;
        flex-basis: auto;
        text-align: center;
        padding: 0 20px;
    }

    ul.submenu {
      padding: 0 10px;
      position: absolute;
      top: 58px;
      background-color: #f8fafc;
      border-radius: 0 0 5px 5px;
    }

    ul.submenu li {
        width: 150px;
    }

    /* To Do:
    1. Layout the 3 Top Level Links horizontally (side by side)
    2. Layout the submenu links (dropdown for wider screen)
    3. Add focus or keyboard focus to the dropdown links <= group work */

}
